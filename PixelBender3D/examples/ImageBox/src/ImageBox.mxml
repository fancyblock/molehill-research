<?xml version="1.0" encoding="utf-8"?>

<!-- ****************************************************************************
*
* ADOBE SYSTEMS INCORPORATED
* Copyright (C) 2011 Adobe Systems Incorporated
* All Rights Reserved.
*
* NOTICE:  Adobe permits you to use, modify, and distribute this file in 
* accordance with the terms of the Adobe license agreement accompanying it.  
* If you have received this file from a source other than Adobe, then your 
* use, modification, or distribution of it requires the prior written 
* permission of Adobe.
*
**************************************************************************** -->

<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" minWidth="955" minHeight="600"
			   skinClass="TransparentApplicationSkin"
			   applicationComplete="applicationCompleteHandler( event )"
			   >
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			// ======================================================================
			//	Imports
			// ----------------------------------------------------------------------
			import flash.display.*;
			import flash.display3D.*;
			import flash.events.*;
			
			import spark.core.*;
			import mx.controls.sliderClasses.Slider;
			import mx.events.SliderEvent;
			
			// ======================================================================
			//	Properties
			// ----------------------------------------------------------------------
			private var viewer_:ImageBoxViewer;

			// ======================================================================
			//	Methods
			// ----------------------------------------------------------------------
			protected function applicationCompleteHandler( event:Event ):void
			{
				stage.scaleMode = StageScaleMode.NO_SCALE;
				stage.align = StageAlign.TOP_LEFT;
				stage.addEventListener( Event.ENTER_FRAME, enterFrameHandler );
				
				var stage3D:Stage3D = stage.stage3Ds[ 0 ];
				
				stage3D.viewPort = new Rectangle( 0, 0, stage.stageWidth, stage.stageHeight );
				stage3D.addEventListener( Event.CONTEXT3D_CREATE, stageNotificationHandler );
				stage3D.requestContext3D( Context3DRenderMode.AUTO );
			}
			
			protected function stageNotificationHandler( event : Event ) : void
			{
				var stage3D:Stage3D = event.target as Stage3D;
				
				if ( !stage3D )
					return;
				
				viewer_ = new ImageBoxViewer( stage, stage3D.context3D );
			}
			
			protected function enterFrameHandler( event:Event ):void
			{
				viewer_.render( getTimer() );
			}
		]]>
	</fx:Script>
</s:Application>
